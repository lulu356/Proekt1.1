Нередко различные классы и структуры оформляются в виде отдельных библиотек, которые компилируются в файлы dll и затем могут подключать в другие проекты. Благодаря этому мы можем определить один и тот же функционал в виде библиотеки классов и подключать в различные проекты или передавать на использование другим разработчикам.

Создадим и подключим библиотеку классов.

Возьмем имеющийся проект консольного приложения .NET Core, например, созданный в прошлых темах. В структуре проекта нажмем правой кнопкой на название решения и далее в появившемся контекстном меню выберем Add -> New Project... (Добавить новый проект):

Создание библиотеки классов в C#
Далее в списке шаблонов проекта найдем пункт Class Library (.NET Core):

Библиотека классов в C# и .NET Core
Затем дадим новому проекту какое-нибудь название, например, MyLib:

Class Library in .NET Core
После этого в решение будет добавлен новый проект, в моем случае с названием MyLib:

Добавление нового проекта в C# и .NET Core
По умолчанию новый проект имеет один пустой класс Class1 в файле Class1.cs. Мы можем этот файл удалить или переименовать, как нам больше нравится.

Например, переименуем файл Class1.cs в Person.cs, а класс Class1 в Person. Определим в классе Person простейший код:

1
2
3
4
5
public class Person
{
    public string name;
    public int age;
}
Новый проект в C# и .NET Core
Теперь скомпилируем библиотеку классов. Для этого нажмем правой кнопкой на проект библиотеки классов и в контекстном меню выберем пункт Rebuild:

Компиляция библиотеки классов в C# и .NET Core
После компиляции библиотеки классов в папке проекта в каталоге bin/Debug/netcoreapp3.0 мы сможем найти скомпилированный файл dll (MyLib.dll). Подключим его в основной проект. Для этого в основном проекте нажмем правой кнопкой на узел Dependencies и в контекстном меню выберем пункт Add Reference:

Добавление библиотеки классов в проекте на C# и .NET Core
Далее нам откроется окно для добавления библиотек. В этом окне выберем пункт Solution,который позволяет увидеть все библиотеки классов из проектов текущего решения, поставим отметку рядом с нашей библиотекой и нажмем на кнопку OK:


Если наша библиотека вдруг представляет файл dll, который не связан ни с каким проектом в нашем решении, то с помощью кнопки Browse мы можем найти местоположение файла dll и также его подключить.

После успешного подключения библиотеки в главном проекте изменим класс Program, чтобы он использовал класс Person из библиотеки классов:

1
2
3
4
5
6
7
8
9
10
11
12
13
14
using System;
using MyLib;    // подключение пространства имен из библиотеки классов
 
namespace HelloApp
{
    class Program
    {
        static void Main(string[] args)
        {
            Person tom = new Person { name = "Tom", age = 35 };
            Console.WriteLine(tom.name);
        }
    }
}